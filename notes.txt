Heart's Desire: Black Lake

5 levels? or 4?
	 						size	mercury	sewage	radio	toxic	garbage
karachay			sm										yes
onondaga			s/m		yes			yes						yes
tai						m/l													yes?
serra palada	sm		yes
victoria			l							yes						yes		yes
9 enemies, then 15, 21, 27, 33? or 7, 12, 17, 22, 27, 32?
8 types of enemies... 12, 123, 1234, 2345, 3456, 4567, 45678

fight waves of enemies on single board to purify lakes. day = your turn, night = enemy turn
- if you die, start again from same level?
- base attack = 3
- base AP = 3
- base HP = 9

enemies...
- will move OR attack on their turn
- spawn semi-frequently, sometimes multiples at once. almost every night adds a new enemy
  - different thresholds for different lakes? e.g. at most 3 enemies for lv1, at most 4 for lv2, etc
- come in a few varieties, but not many
  - garby: basic attacks & moves
	  - 6 HP, 1 attack
	- mercuri: acts twice but has low HP
	  - 4 HP, 1 attack
	- sewy: can't do special attack if adjacent
	  - 6 HP, 1 attack
	- plasty: high HP
	  - 10 HP
	- toxy: attacks at range
	  - 6 HP, 2 attack melee, 1 ranged?
	- algy: holds you in place if melee attack connects either way ("don't touch it!")
	  - 8 HP, 1 attack, or 2 if restrained?
	- pharma: heals other enemies on its turn (all +3 HP)
	  - 8 HP, 1 attack (but always heals if able)
	- nukey: self-destructs when killed
	  - 3 HP, 1 attack, 2 dmg for self-destruct
- drop rewards when defeated ("purified"), either HP bubbles or items (if flashing)

bosses... 1 for each stage?
- all:
  - only appear when all other enemies defeated, after minor fanfare
  - attack 3 times per turn?
	- have unique graphics
	- randomly summon HP bubbles so player can survive more easily? but only some
	- have fairly high HP
- invasive species: summons adds?
- noise pollution: strong, ranged attack?
- heat pollution: melee attack gets stronger over time? +1 every time it hits?
- light pollution: immune to physical attacks?
- pesticide: constant damage over time
- 1 of each normal enemy all at once?
- humans? summon garbage adds?

implement enemy syncs if time, but keep very basic. no scaling, maybe even all the same effect

moving and attacking cost 1AP each

move into enemy to melee attack

special does special attack
* call it "wish"?
x can use 3 times, get 1 use back per day
- can use 3 times, get uses back after collecting Special fish
- default: 3 random hits to any enemies, 3 damage
? augment: more damage
? augment: more hits from base effect?
- skimmer: also attacks adjacent enemies with strong hit
? augment: also attacks center with strong hit
- alligator: also heals 3 HP for every enemy defeated (passive)

pick up power-ups that passively enhance stats
- cattail: max HP + 1
- lotus: max HP + 2
? free moves at water's surface
- eel: phys attack + 1
- duck: phys attack + 2 at surface
- crab: phys attack + 2 at lake bottom
- more special attack uses stockable
- more special recharge fish
- toy boat: many more special recharge fish at surface
- sunken treasure: many more special recharge fish at bottom
- frog: more HP fish
- turtle: many more HP fish at surface
- crayfish: many more HP fish at bottom
- nessie: AP + 1
? heal more HP during the day (+1 on top of 3)
? HP bubbles heal 2x HP
? heal 3 HP after killing enemy

* picking up a 10th power-up when you already have 9 forces you to dump the oldest one? or opens a menu?
  * i think do if time, otherwise you just keep all powerups you find
* randomly given out in each stage

music should be easy: 1 for stages, 1 for bosses, 1 for menus/everything else

sfx will be a little harder. play for nearly everything!


title screen:
- play
- hints/controls
- hi scores (fewest days to finish each stage)
- credits


toss item screen:
- wasd/dir to select
- i = info
- delete/backspace = replace
- x/esc to cancel


enemy
{
	class = enemy
	type
	hp
	attack
	carrying (= powerup or nothing)
}

hero
{
	class = hero
	hp
	attack
	AP
	SP
	powers
	{
		...(each thing will or won't happen; inventory referenced when wish made)
	}
}

powerup
{
	class = powerup
	id
	graphic
}

field
{
	1
	{
		1 = ...anything (enemy, powerup, hero) or nothing
		2
		3
	}
	2
	{
		1
		2
		3
	}
	3
	{
		1
		2
		3
	}
}

stage
{
	id
	field
	kills = (if <= 0, then mode = boss)
	bgm
	enemy array (shuffled but pre-set, including some blanks? OR weighted frequencies + overall rate)
	maxEnemies
	powerup frequencies
}

paused

music

turn (0 = hero, any other = that enemy)

firstSightingInfo (for enemies AND powerups. maybe even instructions at start?)
{
	{name, seen = false, infographic}
}

eventSet
{
	finishedCount (incremented by 1 every time a member event reaches its end; done when count = #events)
	progress (incremented by dt * fps value)
	frame (floor of progress)
	sound (played at frame 0)
	
	events
	{...pushed by cloning from reference file
		{...pushed by cloning from reference file
			subject (hero or enemy or usually-invisible anim)
			frames (an ordered list of {x offset, y offset, named pose}s, which are added and interpreted as quads when drawing)
			 (fps - multiplier for counting frames. unnecessary! just hard-code this, i think)
			 (duration - nope, that's just the number of frames)
			 (finished - also nope, that's just if super.frame >= #frames)
			final (state to leave subject in)
			destX, destY
			offset
		}
	}
}

what are all values for frames[], i.e. what poses can the hero and enemies make?
- attack = 1 quad, 
  ? attackN, attackS, attackE, attackW = the same quad, but draw will shift the position a little
- victim = 1 quad, for taking damage
- cast1, cast2 = for making wishes; some enemies have special attacks

event types... (pushed & processed in sets)
- move + direction
  ? moveN1, moveN2..., moveN15, moveS1, etc? this seems so sloppy. can we just use destination markers?
	- populate frames with 
- attack + direction
- cast
- damage
- ~animations~ for special effects
- spawn
  ? same for powerups dropped by enemies?
- silent spawn
? damage + show damage... somehow. UI decisions to be made here :S
- kill (remove from grid + count kill on board)
- self-destruct
- stick hero (algae)
- unstick hero
- stuck move + direction
- start music
- fade music
- stage start
- stage clear
- game over
- enemy count fill (@ stage start)
- boss intro? if doing flyover announcement
- show boss UI / fade boss UI
  - don't forget about special bosses
- collect power
- apply power (for current hp/sp or max hp/sp/ap)
x i think DO choose targets and process attack effects as part of event sets. would actually be harder to process twice 
  - e.g. what if your attack has 3 effects that hit the same enemy but it dies after the 2nd effect? 3rd effect hits a ghost? makes animating hard...
	  ... or wait, what if you QUEUE the animations AFTER doing the target calculations and math?
		... i think it's kill() that i'm worried about. can that come in between effects without breaking shit?
* ok, so upon further reflection, i think you can do all the attack processing ahead of time, queueing events including enemy removals

things that are NOT queued events & instead interrupt the normal flow of input <-> event processing:
- popup info
- inventory management
- title screen ops, including:
  - initial fade-in
  - credits display
? ending (queue music change + display of screen (heart over lake with trees & mountains, sun shining) that fades to black after input -> title fade-in)

example of many-set queue: hero makes a wish with several effects
1. effect A damages 3 enemies (hero -> idle, then immediately hero -> casting. no biggie?)
2. effect B damages 2 enemies
3. remove one defeated enemy killed by effect B
4. effect C damages 1 enemy
5. effect D heals hero
big question: the logic for all these (some effects are random!?) will have to be calculated, too. unite with animation? or separate and pre-plan all? :(

example 2, studying the actual queueing order, walking through what will happen:
wish -> effect A hits 3 random enemies -> enemy Z dies -> effect B hits 2 enemies -> enemy Y dies and self-destructs -> hero takes damage -> enemy X dies
	choose 3 targets for A
  QUEUE ANIMATION A (hero casting with .final = casting, XYZ damage poses, XYZ sparkles or whatever)
	deal damage to X Y Z. 
	QUEUE DAMAGE ANIMATION
	any dead? (yes, Z)
		for each dead: 
			self-destructing? no
				QUEUE Z REMOVAL
	choose targets for B
	QUEUE ANIMATION B (hero still casting because of A's .final)
	deal damage to X Y
	QUEUE DAMAGE ANIMATION (X + Y)
	any dead? (yes, Y and X)
		for each dead: 
			self-destructing? (Y: yes)
				QUEUE Y EXPLODING (surrounding animations, sound)
				hero hit? (yes)
					QUEUE HERO DAMAGE ANIM (important: .final = current, so hero returns to casting after)
					deal damage to hero
					QUEUE DAMAGE DISPLAY
		...
			self-destructing? (X: no)
				QUEUE X REMOVAL
	end; begin processing

example 3, ditto
directional impetus:
	enemy in the way? attack,	don't move
		damage target
		QUEUE ATTACK ANIMATION
		QUEUE DAMAGE DISPLAY
		dead?
			QUEUE ENEMY REMOVAL
	else
	  stuck?
			don't move
		  QUEUE STUCK-MOVE ANIMATION	
		else
			dest clear?
				QUEUE MOVE ANIMATION + MOVE
	end; begin processing

example 4, ditto
hero attacks last enemy -> enemy dies -> intro boss
	impetus triggers attack
	QUEUE ATTACK ANIM (hero attacks, target cringes)
	deal damage to target
	QUEUE DAMAGE DISPLAY
	dead?
		self-destructing? (no)
			QUEUE REMOVAL
	any enemies left? (no; yes = no-op)
		QUEUE BOSS INTRO (flyover if doing) + BOSS UI SWAP + MUSIC CHANGE 
	end; begin processing