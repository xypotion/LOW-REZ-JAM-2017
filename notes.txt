high-level to do & time estimates as of 8/7, 1AM
- enemies (art, ai, special fx) - 1-2 more days
- sound (sfx, music, implementation ) - 2-3 days
- powerups (implementation, art, syncs, management) - 4 days
  - way of simplifying = cut syncs, just let player have 1 of each (including would-be sync effects) over course of game, shuffled
	  * maybe the really good ones are dropped by bosses! AP up, SP up, wish improvers
	- vastly simplified: just +hp and +sp fish. ~ 1 day. do this first, i think! see what you have time for later
	  - would also reduce the need for info popups? maybe?
- stage mechanics (scoring, UI, boss mechanics) - 2 days?
  - easy to cut stage-title art. simplify by just saying "stage 1", "stage 2", etc
- info popups - 1 day i hope
- title screen (art, credits) & ending - 1 day
- hi scores & autosaves - 1 day
- playtesting & balancing - 1 day?
- window resizing - <1 day
* total: another 13-15 days of work. damn. only 10 actual days left in the jam. assess again in a few days, then...
  - probably cut scoring & autosaves first
	- simplify powerups (i.e. cut syncs & mgmt)
	x keep sound very basic? no music? :(
	- cut bosses? i hope not... maybe cut boss UI? would save a tiny bit of time
	- cut info popups? could, i guess... or just simplify as 1 static graphic + 1 subject graphic + just printed text!
* also, wow, there are almost 700 entrants already. frig.

8/14, 11:15 PM - basically a day an a half left. what do you still need to do?
- todo: track turns & deaths, then print on ending screen. don't forget to reset them, too, in case player wants to try again!
- todo: grey out Continue on load if you're not implementing autosaves
- other minor TODOs:
	- ranged attack animation
	- killEnemy() when no drop (e.g. bosses): add sound? any other change? (only do if possible; boss adds should have drops, right?)
	- can bgEvents work when time = 0?
	- UI sheet has an unnecessary repetition or two. if graphic is exactly the same, don't need multiple quads
	  - gosh, kinda ditto for hero sheet. :|
		- condense graphics, in general. but not high-priority
	. inputLevel feels a little underused... but that and other refactoring TODOs are not important now, in the home stretch
	. todo: enemy turn order fix (then shuffle turns). have one turn queue the next via functionEvent if remaining AP? like skipping stones
	. todo: P to pass a turn? AND can't use a wish with no enemies? 
	  * OR trying to use a wish with no enemies costs only AP and no SP?
- todo: remove or hide print()s and DEBUGs
* PLAYTESTING!
* PUBLISHING & UPLOADING!
  - including screenshots and little blurbs for game page
- make ending look better
- make game over look better
- title screen:
	- credits: cfxr, beepbox, pixen, lowrezjam, itchio, dustin?
	- make it look a little better. city + roads or something (title text moves? ehh)
- music
	- title screen music
	? game over music
	- victory music
	- last stage & final boss music?
- bosses
  - playtest a little more
	- special behaviors:
	  - heat powers up? or nah?
	  - noise = sewy, at least. maybe whole field?
		- adds for greed
		- adds for apathy
		- healing for xps? or nah?
	- fanfare?
	- death sound and/or animation?
- boss powerups... if out of time: killing bosses just increases your max HP, MAYBE other static boosts (see below)
  - if doing fancy style: separate action of collecting & application of powerup. will help when Continuing and reinitializing hero
	  - i really want to do these, but i could see implementing them taking several hours....
		  - variety of effects, graphics, spawning, applying on collect, applying on continue...
		- some change behavior code. maybe actually easier than stats?
		- some change stats that would need to be loaded in multiple ways, plus graphical toggles
- autosave for stage progress, if time
  - include collected powerups if not static
	- turn count + death count for nice ending screen
- nice-to-haves if time:
  - resizable window!
  - alternate stage backgrounds! mountains, city, whole world for last stage?
	- better animation for "magic" damage/effects. spark is boring
	- slightly better sfx
	- "pure!" effect after killing enemy? def not needed
	- alternate title screen if game won

Heart's Desire: Black Lake

5 levels? or 4?
	 						size	mercury	sewage	radio	toxic	garbage
karachay			sm										yes
onondaga			s/m		yes			yes						yes
tai						m/l													yes?
serra palada	sm		yes
victoria			l							yes						yes		yes
9 enemies, then 15, 21, 27, 33? or 7, 12, 17, 22, 27, 32?
8 types of enemies... 12, 123, 1234, 2345, 3456, 4567, 45678

fight waves of enemies on single board to purify lakes. day = your turn, night = enemy turn
- if you die, start again from same level?
- base attack = 3
- base AP = 3
- base HP = 9

enemies...
- will move OR attack on their turn
- spawn semi-frequently, sometimes multiples at once. almost every night adds a new enemy
  - different thresholds for different lakes? e.g. at most 3 enemies for lv1, at most 4 for lv2, etc
- come in a few varieties, but not many
  - garby: basic attacks & moves, but will eat powerups if adjacent!
	  - 6 HP, 1 attack
		- explodes if it eats too many?
	- mercuri: acts twice but has low HP
	  - 4 HP, 1 attack
	- sewy: can't do special attack if adjacent
	  - 6 HP, 1 attack
	- plasty: high HP
	  - 10 HP
		- alternate name: petty? polly?
	- toxy: attacks at range
	  - 6 HP, 2 attack melee, 1 ranged?
	- algy: holds you in place if melee attack connects either way ("don't touch it!")
	  - 8 HP, 1 attack, or 2 if restrained?
	- pharma: heals other enemies on its turn (all +3 HP)
	  - 8 HP, 1 attack (but always heals if able)
		- limited casts? or only a chance of doing? hmm
	- nukey: self-destructs when killed
	  - 3 HP, 1 attack, 2 dmg for self-destruct
- drop rewards when defeated ("purified"), either HP bubbles or items (if flashing)

enemy syncs, if doing: any 3 in a row -> all get attack + 1? or something more elaborate? :/

bosses... 1 for each stage? (pharma sewy garby)
- all:
  - only appear when all other enemies defeated, after minor fanfare
  - attack 3 times per turn?
	- have unique graphics
	- randomly summon HP bubbles so player can survive more easily? but only some
	- have fairly high HP
* invasive species (rainbow algy palette swap): summons adds? or sticky?
* noise pollution (rainbow sewy swap?): strong ranged attack + melee + can't wish when adjacent?
* heat pollution (nukey swap?): melee attack gets stronger over time? +1 every time it hits? or +1 if not near hero? reaction on its turn only, 1AP
* light pollution (light toxy swap. lavender?): immune to physical attacks? eek. or takes less damage?
* oil spill! (black mercuri swap): sticky? or just 3 AP?
* styrofoam or XPS (white plasty palette swap): heals when not adjacent to hero? doesn't chase? 1 AP. might need healStrength if doing
* dumping? consumption/gluttony? (garby swap): 3 AP, seeks out powerups (lots of garbies and mercuris in level, DOES fully heal after eating
* lobbying? greed? (black pharma swap): summons 1 pharma + 1 melee action. not tons of HP. penultimate boss?
* final boss = humans/"human laziness"/apathy? summons 1 random add per turn, then acts as melee for 1 AP. or ranger? hm
- pesticide/agriculture: constant damage over time
- 1 of each normal enemy all at once = final boss OR final stage before final boss
- acid rain?
- something that drains HP when it hits you? or just automatically heals 3 HP every turn?
- garby palette swap that DOES heal fully after eating a powerup
- a ranger with >1 AP
- an escapey healer? eh

implement enemy syncs if time, but keep very basic. no scaling, maybe even all the same effect

moving and attacking cost 1AP each

move into enemy to melee attack

special does special attack
* call it "wish"?
x can use 3 times, get 1 use back per day
- can use 3 times, get uses back after collecting Special fish
- default: 3 random hits to any enemies, 3 damage
? augment: more damage
? augment: more hits from base effect?
- skimmer: also attacks adjacent enemies with strong hit
? augment: also attacks center with strong hit
- alligator: also heals 3 HP for every enemy defeated (passive)

pick up power-ups that passively enhance stats
- cattail: max HP + 1
- lotus: max HP + 2
? free moves at water's surface
- eel: phys attack + 1
- duck: phys attack + 2 at surface
- crab: phys attack + 2 at lake bottom
- more special attack uses stockable
- more special recharge fish
- toy boat: many more special recharge fish at surface
- sunken treasure: many more special recharge fish at bottom
- frog: more HP fish
- turtle: many more HP fish at surface
- crayfish: many more HP fish at bottom
* for fish-multipliers above: instead of spawning more, maybe effects are stronger (overall or at surface/bottom)
- nessie: AP + 1
? heal more HP during the day (+1 on top of 3)
? HP bubbles heal 2x HP
? heal 3 HP after killing enemy

power syncs, if doing: yellow-outlined ones -> AP+1 (and no nessie), pink-outlined ones -> SP+1, blue -> regen 1 per turn

* picking up a 10th power-up when you already have 9 forces you to dump the oldest one? or opens a menu?
  * i think do if time, otherwise you just keep all powerups you find
* randomly given out in each stage

music should be easy: 1 for stages, 1 for bosses, 1 for menus/everything else

sfx will be a little harder. play for nearly everything!


title screen:
- play
- hints/controls
- hi scores (fewest days to finish each stage)
- credits


toss item screen:
- wasd/dir to select
- i = info
- delete/backspace = replace
- x/esc to cancel


enemy
{
	class = enemy
	type
	hp
	attack
	carrying (= powerup or nothing)
}

hero
{
	class = hero
	hp
	attack
	AP
	SP
	powers
	{
		...(each thing will or won't happen; inventory referenced when wish made)
	}
}

powerup
{
	class = powerup
	id
	graphic
}

field
{
	1
	{
		1 = ...anything (enemy, powerup, hero) or nothing
		2
		3
	}
	2
	{
		1
		2
		3
	}
	3
	{
		1
		2
		3
	}
}

stage
{
	id
	field
	kills = (if <= 0, then mode = boss)
	bgm
	enemy array (shuffled but pre-set, including some blanks? OR weighted frequencies + overall rate)
	maxEnemies
	powerup frequencies
}

paused

music

turn (0 = hero, any other = that enemy)

firstSightingInfo (for enemies AND powerups. maybe even instructions at start?)
{
	{name, seen = false, infographic}
}

eventSet
{
	finishedCount (incremented by 1 every time a member event reaches its end; done when count = #events)
	progress (incremented by dt * fps value)
	frame (floor of progress)
	sound (played at frame 0)
	
	events
	{...pushed by cloning from reference file
		{...pushed by cloning from reference file
			subject (hero or enemy or usually-invisible anim)
			frames (an ordered list of {x offset, y offset, named pose}s, which are added and interpreted as quads when drawing)
			 (fps - multiplier for counting frames. unnecessary! just hard-code this, i think)
			 (duration - nope, that's just the number of frames)
			 (finished - also nope, that's just if super.frame >= #frames)
			final (state to leave subject in)
			destX, destY
			offset
		}
	}
}

what are all values for frames[], i.e. what poses can the hero and enemies make?
- attack = 1 quad, 
  ? attackN, attackS, attackE, attackW = the same quad, but draw will shift the position a little
- victim = 1 quad, for taking damage
- cast1, cast2 = for making wishes; some enemies have special attacks

event types... (pushed & processed in sets)
- move + direction
  ? moveN1, moveN2..., moveN15, moveS1, etc? this seems so sloppy. can we just use destination markers?
	- populate frames with 
- attack + direction
? cast (vague)
- display damage
  - idea: a random fuzz grid over the enemy graphic; more fuzz = less HP, proportionally
- ~animations~ for special effects
- spawn
  ? same for powerups dropped by enemies?
- silent spawn
? damage + show damage... somehow. UI decisions to be made here :S
- kill (remove from grid + count kill on board)
- self-destruct
- stick hero (algae)
- unstick hero
- stuck move + direction
- start music
- fade music
- stage start
- stage clear
- game over
- enemy count fill (@ stage start)
- boss intro? if doing flyover announcement
- show boss UI / fade boss UI
  - don't forget about special bosses
- collect power
- apply power (for current hp/sp or max hp/sp/ap)
x i think DO choose targets and process attack effects as part of event sets. would actually be harder to process twice 
  - e.g. what if your attack has 3 effects that hit the same enemy but it dies after the 2nd effect? 3rd effect hits a ghost? makes animating hard...
	  ... or wait, what if you QUEUE the animations AFTER doing the target calculations and math?
		... i think it's kill() that i'm worried about. can that come in between effects without breaking shit?
* ok, so upon further reflection, i think you can do all the attack processing ahead of time, queueing events including enemy removals
	
what does an event look like? 
x they are only animations; data changes happen before event queueing/processing 
  - nope, moves and removals actually affect data, so... 
	- there may be no elegant way to avoid classifying these, and maybe that's OK. classes ahoy
* class: animation
	- pointer to some drawable object
	- ordered list of {pose, xoffset, yoffset}s for that object to draw after frames tick
		- "final" pose to leave object in (in case co-animating events finish early) is just the last element in this list.
* class: cell operation
	- cell coordinates, and
	- what to put in cell. use to:
	  - kill enemy i.e. replace with empty() and prevent it from drawing/interacting forevermore once the event is processed
		- move one entity from cell A to cell B
		  - e.g. pass cell B's coordinates and literally stage.field[yA][xA], AND cell A's coordinates and an empty(). done. right?
		- spawn a new entity. made in pre-process then passed to cell via event
* class: sound
  - id of sound to start
* class: screen
  - screen to display
	- frames (if animated. maybe none actually are?)
	- x/y offsets
	- ALPHA offsets, too. a lot of these things will fade in or out
* class: enemy counter (use for filling at stage start AND when enemies are killed)
  - ordered list of ints to display on each frame?
	* if a sound plays for each counter added, will that just happen @ processing? or should it be queued?
	
think again: hero (& enemy?) HP is always visible. so you can't alter it in pre-processing! must be done as event. ditto for AP/SP, boss HP, enemy count...
- event class: counter mod? for changing HP, SP, AP, enemy stats, enemy count, boss HP
  - target counter (just object + member name?)
  - target amount
	- step
	- sound (optional)
* sucks, but the examples/studies below are now partially invalidated. events will have to queue other events? damage -> kill? -> branching logic
- another option: decouple counters and counter displays? also messy...
  x each counter is a table: {actual, shown, maximum, sound, quick}; update actual in pre-processing, then queue up "actuate" events that update these
	  - actual can go under 0 but never over max
		- shown can never go over max or under 0
		- if "quick", then actuate all at once, not over multiple frames
		- actuation is basically another kind of animation. sound plays on each "frame" if present (unless quick)
	* nope. coulda worked, but at least needs a tweak: what if the same enemy is damaged by 2 effects? actuating will show ALL the damage after just the 1st
	- exactly the same as above, but "actuate" events come with deltas
	  - maybe also a "shown-goal" member? or can you just decrement the delta in the event object on key frames?
	  - if you ignore actual in animation, signed deltas would allow queued things like wish -> enemy self-destructs -> hero heals
	* also posSound and negSound, not just sound
* so it's pre-processing + complex counters + actuations vs. real-time attack resolution logic. why am i still leaning towards the former?

poses can be multi-frame: idle, casting (each 2 = frames that animate automatically on universal timer (?))
or they can be single frames, shown in sequence: step1, step2, step3, step4 (for e.g. a "boom" animation), hide


things that are NOT queued events & instead interrupt the normal flow of input <-> event processing:
? popup info
  - ...or maybe it is, if info boxes can pop up AFTER spawns
  * two arrays: enemy popups for the first time you SEE them, and item popups for the first time you GET them
? inventory management
- title screen ops, including:
  - initial fade-in
  - credits display
? ending (queue music change + display of screen (heart over lake with trees & mountains, sun shining) that fades to black after input -> title fade-in)
- bg transition between turns? or is that also an event?

obviously event processing will block input. might need input levels for info boxes, or some kind of 




NAIVE DESIGN

example of many-set queue: hero makes a wish with several effects
1. effect A damages 3 enemies (hero -> idle, then immediately hero -> casting. no biggie?)
2. effect B damages 2 enemies
3. remove one defeated enemy killed by effect B
4. effect C damages 1 enemy
5. effect D heals hero
big question: the logic for all these (some effects are random!?) will have to be calculated, too. unite with animation? or separate and pre-plan all? :(

example 2, studying the actual queueing order, walking through what will happen:
wish -> effect A hits 3 random enemies -> enemy Z dies -> effect B hits 2 enemies -> enemy Y dies and self-destructs -> hero takes damage -> enemy X dies
	choose 3 targets for A
  QUEUE ANIMATION A (hero casting with .final = casting, XYZ damage poses, XYZ sparkles or whatever)
	deal damage to X Y Z. 
	QUEUE DAMAGE ANIMATION
	any dead? (yes, Z)
		for each dead: 
			self-destructing? no
				QUEUE Z REMOVAL
	choose targets for B
	QUEUE ANIMATION B (hero still casting because of A's .final)
	deal damage to X Y
	QUEUE DAMAGE ANIMATION (X + Y)
	any dead? (yes, Y and X)
		for each dead: 
			self-destructing? (Y: yes)
				QUEUE Y EXPLODING (surrounding animations, sound)
				hero hit? (yes)
					QUEUE HERO DAMAGE ANIM (important: .final = current, so hero returns to casting after)
					* so yeah, if damaged while <casting or idle>, return to same. gotta build that into the damage-anim-event builder
					deal damage to hero
					QUEUE DAMAGE DISPLAY
		...
			self-destructing? (X: no)
				QUEUE X REMOVAL
	end; begin processing

example 3, ditto
directional impetus:
	enemy in the way? attack,	don't move
		damage target
		QUEUE ATTACK ANIMATION
		QUEUE DAMAGE DISPLAY
		dead?
			QUEUE ENEMY REMOVAL
	else
	  stuck?
			don't move
		  QUEUE STUCK-MOVE ANIMATION	
		else
			dest clear?
				QUEUE MOVE ANIMATION + MOVE
	end; begin processing

example 4, ditto
hero attacks last enemy -> enemy dies -> intro boss
	impetus triggers attack
	QUEUE ATTACK ANIM (hero attacks, target cringes)
	deal damage to target
	QUEUE DAMAGE DISPLAY
	dead?
		self-destructing? (no)
			QUEUE REMOVAL
	any enemies left? (no; yes = no-op)
		QUEUE BOSS INTRO (flyover if doing) + BOSS UI SWAP + MUSIC CHANGE 
	end; begin processing
	
	

REAL-TIME ATTACK RESOLUTION + BI-DIRECTIONAL QUEUE
* "QUEUE FOO" = put on bottom, "STACK FOO" = put on top

wish -> effect A hits 3 random enemies -> enemy Z dies -> effect B hits 2 enemies -> enemy Y dies and self-destructs -> hero takes damage -> enemy X dies
	QUEUE EFFECT A
	QUEUE EFFECT B
	QUEUE EFFECT C
event processing...
	:EFFECT A
		who do i hit? X, Y, Z
		STACK DAMAGE+ANIMATION FOR X, Y, Z
		:DAMAGE+ANIM FOR X Y Z
			STACK ANIM
			:ANIM
				play sound + explosions or whatever on X Y Z
			end
			hp for each -1
			hp for each -1
			hp for each -1
			damage done, any dead? yes, Z
			STACK REMOVE Z
			:REMOVE Z
				set Z's cell to empty
			end
		end
	end
	:EFFECT B
...and i kinda hate this! it feels so fragile and backwards! like things will get queued in the wrong order and it'll massively break. even when it works it'd be super confusing to follow. nope.




PRE-PROCESS EVERYTHING + COMPLEX COUNTERS + DELTA-ACTUATION

wish -> effect A hits 3 random enemies -> enemy Z dies -> effect B hits 2 enemies -> enemy Y dies and self-destructs -> hero takes damage -> enemy X dies -> hero healed by effect C
	reduce AP
	wish: reduce SP
	QUEUE AP AND SP ACTUATION
	choose 3 targets for A
  QUEUE ANIMATION A (hero casting with .final = casting, XYZ damage poses, XYZ sparkles or whatever)
	deal actual damage to X Y Z. 
	QUEUE DAMAGE ACTUATION FOR X Y Z
	any dead? (yes, Z)
		for each dead: 
			self-destructing? no
				QUEUE Z REMOVAL + ENEMY COUNTER DECREMENT
	choose targets for B
	QUEUE ANIMATION B (hero still casting because of A's .final)
	deal actual damage to X Y
	QUEUE DAMAGE ACTUATION (X + Y)
	any dead? (yes, Y and X)
		for each dead: 
			self-destructing? (Y: yes)
				QUEUE Y EXPLODING (surrounding animations, sound) & REMOVAL
				hero hit? (yes)
					QUEUE HERO DAMAGE ANIM-ACTUATION (important: .final = current, so hero returns to casting after)
					* so yeah, if damaged while <casting or idle>, return to same. gotta build that into the damage-anim-event builder
					deal damage to hero
					QUEUE DAMAGE DISPLAY
		...
			self-destructing? (X: no)
				QUEUE X REMOVAL + ENEMY COUNTER DECREMENT
	QUEUE EFFECT C (heal on hero)
	restore hero's actual HP
	QUEUE HEALING ACTUATION
	end
and begin processing events:
	:ACTUATE AP-1 AND SP-1 (simultaneous)
  :A'S ANIMATION (incl. hero=casting, XYZ = victim then back to idle)
	:A'S DAMAGE ACTUATION ON X Y Z
	:REMOVE Z (set cell to empty()) + ENEMY COUNTER DECREMENT
	:B'S ANIMATION (XY = victim)
	:B'S DAMAGE ACTUATION ON X Y
	:Y EXPLODING ANIMATION
	:Y IS REMOVED & ENEMY COUNTER DECREMENT
	:HERO DAMAGE ACTUATION (cringe, then back to casting)
	:REMOVE X
	:C'S ANIMATION (hero casting, then idle)
	:C'S HEAL ACTUATION
+ all idle, to be safe? hm

directional impetus:
	enemy in the way? attack,	don't move
		reduce AP
		QUEUE AP ACTUATION
		damage target
		QUEUE ATTACK ANIMATION
		QUEUE DAMAGE ACTUATION
		dead?
			QUEUE ENEMY REMOVAL + ENEMY COUNTER DECREMENT
	else
	  stuck?
			don't move
		  QUEUE STUCK-MOVE ANIMATION	
		else
			dest clear?
				reduce AP
				QUEUE AP ACTUATION
				QUEUE CELL CHANGE + MOVE ANIMATION (move first, set offset high, decrement until 0)
	end; begin processing
processing attack:
	AP ACTUATION
	ATTACK ANIMATION (hero shifty, target cringey)
	DAMAGE ACTUATION
	(ENEMY REMOVAL, COUNTER DECREMENT)
processing stuck:
	STUCK ANIMATION, that's it
processing move:
	AP ACTUATION
	CELL CHANGE, ANIMATE

hero attacks last enemy -> enemy dies -> intro boss
	reduce AP
	QUEUE AP ACTUATION
	impetus triggers attack
	QUEUE ATTACK ANIM (hero attacks, target cringes)
	deal damage to target
	QUEUE DAMAGE ACTUATION
	dead?
		self-destructing? (no)
			QUEUE REMOVAL
	any enemies left? (no; yes = no-op)
		QUEUE BOSS INTRO (flyover if doing) + BOSS UI SWAP + MUSIC CHANGE 
	end; begin processing
...
	
hero attacks algy -> hero stuck -> can't move away -> make wish to attack again -> algy dies -> hero unstuck
...stuck has to be a pointer to an algy? can't just unstick after killing any algy. if pointer to algy doesn't work, can probably hack this :/

(enemy turn) -> new enemy X spawns -> show new enemy info -> enemy Y approaches -> enemy Z attacks hero -> enemy turn over

hero attacks -> enemy dies & drops new powerup -> hero collects powerup -> show info
...attack, actuation, damage, remove enemy + add powerup to that cell...hero move, gain powerup*, remove powerup from cell, actuate changes
  * interrupt for inv. management here? i think?

(enemy turn) -> toxy A moves away -> toxy B attacks ...gah, AI.



ROUGH AI
- garby, plasty, sewy, algy, nukey: attack if adjacent to hero, otherwise move closer (compare locations)
- mercuri: same but do it twice
- toxy: move away if adjacent, otherwise shoot (attack)
- pharma: heal all enemies if any below max HP, otherwise attack, otherwise move closer





title screen -> stage 1 .. stage n (-> game over -> continue) -> ending
- event processing will block input, so just transition between these states via events

game.state = title, credits, game over, day or night (+stage = playing) 
game.stage set when in a stage
game.highestStage = 0; Continue only enabled if >= 1
game.heroStats? are you initializing a new hero for every stage? hmm

all initialized at the start of each stage, including on return from title screen or game over:
stage.field
stage.startingEnemyList
stage.enemyList
stage.boss
stage.enemyCount
stage.powers
stage.name? number? for flyover graphics (easy to add later if needed)
stage.dayGraphic/nightGraphic

input, draw, and update separated by game state? i guess? drawFor_, keypressedFor_, updateFor_... but event queue processing is universal?

title, start! -> bgEvent black -> bgEvent night + start music + stage intro -> spawn enemies -> (info popup) -> day

[start -> stage] and [game over -> continue -> stage] should touch the exact same code, actually. "start" starts stage 1, "continue" starts whatever was last
- definitely don't need a lot of game over fanfare. kill the hero, play a little music, then fade -> black -> title


basic info popups to show on 1st Start:

1. Purify the water by destroying pollutants!
2. Use (arrows) or WASD to move & attack during daytime
3. Use (spacebar) to make a wish for 1 SP
4. (blue fish) heals HP, (red fish) heals SP

...then 1 page each for enemies in this order: garby, plasty, mercuri, toxy, algy, sewy?, pharma, nukey
GARBY - weak, but a glutton...
PLASTY - hard to break down!
MERCURI - moves so fast
TOXY - hurts you from afar. mean!
ALGY - yuck, don't touch it!
SEWY - smells so bad!
PHARMA - good for you... or not?
NUKEY - danger: unstable elements!

no info popups for bosses? except maybe final boss?

ohh, info popups for powerups, though. ok

if doing 8 normal stages + a final stage & boss, first 8 give set power-ups:
1. 	HP + 1
2.	fish heal more AND attack + 1 at surface
3. 	SP + 1
4. 	AP + 1
5.	HP + 2
6.	fish heal more AND attack + 1 at bottom
7.	attack + 1
8.  wish heals hero by 3 HP
- 	HP + 3
- 	fish heal more at surface
- 	fish heal more at bottom
- 	wish hurts surrounding enemies
- 	wish does a row/column laser attack
?		wish hits all enemies?
*		attack + 1 if HP full
* 	all fish also heal all AP
*		blue fish heal 3 HP
*		red fish heal 2 SP
?		all increase HP by 1? start really weak?

a fun idea if you have time to make all the graphics: let the player choose a powerup after each boss fight (all remaining spawn at once, can take 1)